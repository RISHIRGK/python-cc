class node:
    def __init__(self,value):
        self.value=value
        self.nxt=None
class ll:
    def __init__(self):
        self.head=None
    def add_beginning(self,value):
        newnode=node(value)
        newnode.nxt=self.head
        self.head=newnode
    def add(self,value):
        newnode=node(value)
        if self.head==None:
            self.head=newnode
        else:
            temp=self.head
            while(temp.nxt!=None):
                temp=temp.nxt
            temp.nxt=newnode
    def print(self):
        temp=self.head
        while(temp!=None):
            print(temp.value)
            temp=temp.nxt
def final_list(l1,l2):
    l3=ll()
    temp1=l1.head
    temp2=l2.head
    while temp1!=None or temp1!=None :
        if temp1!=None :
            l3.add(temp1.value)
            temp1 = temp1.nxt
        if temp2!=None :
            l3.add(temp2.value)
            temp2=temp2.nxt
    return l3
l1=ll()
l2=ll()
l1.add(1)
l1.add(2)
l1.add(4)

l2.add(1)
l2.add(3)
l2.add(4)
final_list(l1,l2).print()
